package GUI;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
import SQL.*;
import java.sql.Connection;
import java.sql.SQLException;
import java.util.LinkedList;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
/**
 *
 * @author luke
 */
public class App extends javax.swing.JFrame {

    /**
     * Creates new form NewJFrame
     */
    public App() {
        initComponents();
        dbConnection = new ConnectionToOracle("", "");  
         try{
            dbConnection.getDBConnection();
            System.out.println("ok");
            addRowsToJTable();
            addRowsToComboBox();
            addRowsToEmployer();
            addRowsToSummaryAge();
            addRowsToSallary();
        }
        catch (SQLException s){
            System.out.println("fail");
        }
    }
    
    private java.util.List<Address> fillAddress()
    {
        java.util.List<Address> addressList;
        try{
        
            addressList = dbConnection.selectAllAdress();
        }
        catch (SQLException e){
            return null;
        }
                
        return addressList;
    }
    
    private java.util.List<Employer> fillEmployer()
    {
        java.util.List<Employer> employerList;
        try{
        
            employerList = dbConnection.selectAllEmployers();
        }
        catch (SQLException e){
            return null;
        }
                
        return employerList;
    }
    
    private java.util.List<SalaryCount> fillSallary()
    {
        java.util.List<SalaryCount> sallaryList;
        try{
        
            sallaryList = dbConnection.getSalyCount();
        }
        catch (SQLException e){
            return null;
        }
                
        return sallaryList;
    }
    
    public void addRowsToJTable(){
        DefaultTableModel model = (DefaultTableModel) addressTable.getModel();
        java.util.List<Address> list = fillAddress();
        addressList = fillAddress();
        Object rowData[] = new Object[4];
        for(int i=0; i< list.size();i++ )
        {
            rowData[0] = list.get(i).getId();
            rowData[1] = list.get(i).getStreet();
            rowData[2] = list.get(i).getZip_code();
            rowData[3] = list.get(i).getCity();
            model.addRow(rowData);
        }
    }
    
    public void addRowsToSummaryAge(){
        DefaultTableModel model = (DefaultTableModel) ageTable.getModel();
        EmployeeInfo temp;
        try{
            temp = dbConnection.getInfoEmployee();
             Object rowData[] = new Object[3];
            rowData[0] = temp.getMinAge();
            rowData[1] = temp.getMaxAge();
            rowData[2] = temp.getMinAge();
            model.addRow(rowData);
        }
        catch(SQLException e ){  
        }       
    }
    
    public void addRowsToSallary(){
        DefaultTableModel model = (DefaultTableModel) sallaryTable.getModel();
        java.util.List<SalaryCount> list = fillSallary();
        sallaryList = fillSallary();
        Object rowData[] = new Object[2];
        for(int i=0; i< list.size();i++ )
        {
            rowData[0] = list.get(i).getSallary();
            rowData[1] = list.get(i).getCount();
            model.addRow(rowData);
        }
    }
    
    public void addRowsToEmployer(){
        DefaultTableModel model = (DefaultTableModel) employerTable.getModel();
        java.util.List<Employer> list = fillEmployer();
        employerList = fillEmployer();
        Object rowData[] = new Object[4];
        for(int i=0; i< list.size();i++ )
        {
            rowData[0] = list.get(i).getNip();
            rowData[1] = list.get(i).getCompanyName();
            rowData[2] = list.get(i).getPhone();
            rowData[3] = list.get(i).getWebsite();
            model.addRow(rowData);
        }
    }
    
    private void addRowsToComboBox(){
        comboBox.addItem("ADD");
        comboBox.addItem("REMOVE");
        comboBox.addItem("UPDATE");
    }
    
    private Address checkIdList(Integer id){
        for (Address address : addressList) {
                if(address.getId()== id) 
                    return address;
        }
        return null;
    }         
       
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        bindingGroup = new org.jdesktop.beansbinding.BindingGroup();

        jComboBox1 = new javax.swing.JComboBox<>();
        summaryPanel = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        addressTable = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        streetField = new javax.swing.JTextField();
        streetLabel = new javax.swing.JLabel();
        zipCodeField = new javax.swing.JTextField();
        cityField = new javax.swing.JTextField();
        zipCodeLabel = new javax.swing.JLabel();
        cityLabel = new javax.swing.JLabel();
        addButton = new javax.swing.JButton();
        comboBox = new javax.swing.JComboBox<>();
        idLabel = new javax.swing.JLabel();
        idField = new javax.swing.JTextField();
        removeButton = new javax.swing.JButton();
        updateButton = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        employerTable = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        ageTable = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        sallaryTable = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        summaryPanel.setMinimumSize(new java.awt.Dimension(108, 500));

        jPanel1.setPreferredSize(new java.awt.Dimension(582, 500));

        addressTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Id", "street", "zip_code", "city"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        addressTable.setAutoscrolls(false);
        addressTable.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        addressTable.setEditingColumn(0);
        addressTable.setEditingRow(0);
        addressTable.setEnabled(false);
        addressTable.getTableHeader().setReorderingAllowed(false);

        org.jdesktop.beansbinding.Binding binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, jButton1, org.jdesktop.beansbinding.ObjectProperty.create(), addressTable, org.jdesktop.beansbinding.BeanProperty.create("selectedElement"));
        bindingGroup.addBinding(binding);

        jScrollPane2.setViewportView(addressTable);

        jButton1.setText("Update");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        streetLabel.setText("street");

        zipCodeLabel.setText("zipCode");

        cityLabel.setText("city");

        addButton.setText("ADD");
        addButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addButtonActionPerformed(evt);
            }
        });

        comboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboBoxActionPerformed(evt);
            }
        });

        idLabel.setText("id");

        idField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                idFieldActionPerformed(evt);
            }
        });

        removeButton.setText("REMOVE");
        removeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeButtonActionPerformed(evt);
            }
        });

        updateButton.setText("UPDATE");
        updateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(idLabel)
                        .addGap(58, 58, 58)
                        .addComponent(streetLabel)
                        .addGap(90, 90, 90)
                        .addComponent(zipCodeLabel)
                        .addGap(104, 104, 104)
                        .addComponent(cityLabel))
                    .addComponent(jButton1)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 452, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(comboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(idField, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(streetField, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(zipCodeField, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(cityField, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(12, 12, 12)
                        .addComponent(removeButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(addButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(updateButton)))
                .addContainerGap(14, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addComponent(jButton1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 301, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(comboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(24, 24, 24)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(zipCodeLabel, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(streetLabel)
                        .addComponent(idLabel)
                        .addComponent(cityLabel)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(streetField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(zipCodeField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cityField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(addButton)
                    .addComponent(idField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(removeButton)
                    .addComponent(updateButton))
                .addContainerGap(76, Short.MAX_VALUE))
        );

        summaryPanel.addTab("Address", jPanel1);

        employerTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "NIP", "name", "phone", "website"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        employerTable.getTableHeader().setReorderingAllowed(false);
        jScrollPane4.setViewportView(employerTable);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 532, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 153, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 208, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(268, Short.MAX_VALUE))
        );

        summaryPanel.addTab("Employer", jPanel3);

        ageTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "MIN", "MAX", "AVG"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        ageTable.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(ageTable);

        jLabel1.setFont(new java.awt.Font("Ubuntu", 0, 36)); // NOI18N
        jLabel1.setText("Summary sallary");

        sallaryTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Sallary", "count"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                true, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane3.setViewportView(sallaryTable);

        jLabel2.setFont(new java.awt.Font("Ubuntu", 0, 36)); // NOI18N
        jLabel2.setText("Summary age");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 242, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addComponent(jLabel2)))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 264, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addContainerGap(146, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        summaryPanel.addTab("Summary", jPanel2);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(summaryPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 560, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(summaryPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        bindingGroup.bind();

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        DefaultTableModel model = (DefaultTableModel) addressTable.getModel();
        model.setRowCount(0);
        addRowsToJTable();        
    }//GEN-LAST:event_jButton1ActionPerformed

    private void addButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addButtonActionPerformed
        DefaultTableModel model = (DefaultTableModel) addressTable.getModel();
        String street, city; 
        Integer zip_code;
        street = streetField.getText();
        city = cityField.getText();
        if(street != "" && city != "" && zipCodeField.getText() != "" )
            try{
                zip_code = Integer.parseInt(zipCodeField.getText());
                dbConnection.insertAddress(street, zip_code, city);
                streetField.setText("");
                cityField.setText("");
                zipCodeField.setText("");
                model.setRowCount(0);        
                addRowsToJTable();
            }
             catch(SQLException|NumberFormatException e){
            }   
    }//GEN-LAST:event_addButtonActionPerformed

    private void comboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboBoxActionPerformed
        int i =1;
        if(comboBox.getSelectedItem() == "ADD") {
            idField.setVisible(false);
            idLabel.setVisible(false);
            streetField.setVisible(true);
            streetLabel.setVisible(true);
            zipCodeField.setVisible(true);
            zipCodeLabel.setVisible(true);
            cityField.setVisible(true);
            cityLabel.setVisible(true);
            addButton.setVisible(true);
            removeButton.setVisible(false);
            updateButton.setVisible(false);
        } 
        else if(comboBox.getSelectedItem() == "REMOVE"){
            idField.setVisible(true);
            idLabel.setVisible(true);
            streetField.setVisible(false);
            streetLabel.setVisible(false);
            zipCodeField.setVisible(false);
            zipCodeLabel.setVisible(false);
            cityField.setVisible(false);
            cityLabel.setVisible(false);
            addButton.setVisible(false);
            removeButton.setVisible(true);
            updateButton.setVisible(false);
        }
        else{
            idField.setVisible(true);
            idLabel.setVisible(true);
            streetField.setVisible(true);
            streetLabel.setVisible(true);
            zipCodeField.setVisible(true);
            zipCodeLabel.setVisible(true);
            cityField.setVisible(true);
            cityLabel.setVisible(true);
            addButton.setVisible(false);
            removeButton.setVisible(false);
            updateButton.setVisible(true);
            
        }                        
    }//GEN-LAST:event_comboBoxActionPerformed

    private void idFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_idFieldActionPerformed
        Integer id;
        if(comboBox.getSelectedItem() == "UPDATE")
        {
            try{
                id = Integer.parseInt(idField.getText());
                streetField.setText("");
                cityField.setText("");
                zipCodeField.setText("");
                Address temp = checkIdList(id);
                if(temp != null){                    
                    streetField.setText(temp.getStreet());
                    zipCodeField.setText(Integer.toString(temp.getZip_code()));
                    cityField.setText(temp.getCity());
                }              
            }
            catch(NumberFormatException e){
                
            }
        }
    }//GEN-LAST:event_idFieldActionPerformed

    private void removeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeButtonActionPerformed
        DefaultTableModel model = (DefaultTableModel) addressTable.getModel();
        Integer id;
        try{
            id = Integer.parseInt(idField.getText()); 
            dbConnection.deleteAddress(id);
            idField.setText("");
            model.setRowCount(0);        
            addRowsToJTable();
        }
        catch(SQLException| NumberFormatException e){
            
        }
    }//GEN-LAST:event_removeButtonActionPerformed

    private void updateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateButtonActionPerformed
        DefaultTableModel model = (DefaultTableModel) addressTable.getModel();
        String street, city; 
        Integer id,zip_code;
        street = streetField.getText();
        city = cityField.getText();
        if(street != "" && city != "" && zipCodeField.getText() != "" )
            try{
                zip_code = Integer.parseInt(zipCodeField.getText());
                id = Integer.parseInt(idField.getText());
                dbConnection.updateAddress(id, street, zip_code, city);
                streetField.setText("");
                cityField.setText("");
                zipCodeField.setText("");
                idField.setText("");
                model.setRowCount(0);        
                addRowsToJTable();
            }
             catch(SQLException|NumberFormatException e){
            } 
    }//GEN-LAST:event_updateButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {

        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(App.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(App.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(App.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(App.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new App().setVisible(true);
            }
        });
    }
    private java.util.List<Employer> employerList;
    private java.util.List<Address> addressList;
    java.util.List<SalaryCount> sallaryList;
    private ConnectionToOracle dbConnection;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addButton;
    private javax.swing.JTable addressTable;
    private javax.swing.JTable ageTable;
    private javax.swing.JTextField cityField;
    private javax.swing.JLabel cityLabel;
    private javax.swing.JComboBox<String> comboBox;
    private javax.swing.JTable employerTable;
    private javax.swing.JTextField idField;
    private javax.swing.JLabel idLabel;
    private javax.swing.JButton jButton1;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JButton removeButton;
    private javax.swing.JTable sallaryTable;
    private javax.swing.JTextField streetField;
    private javax.swing.JLabel streetLabel;
    private javax.swing.JTabbedPane summaryPanel;
    private javax.swing.JButton updateButton;
    private javax.swing.JTextField zipCodeField;
    private javax.swing.JLabel zipCodeLabel;
    private org.jdesktop.beansbinding.BindingGroup bindingGroup;
    // End of variables declaration//GEN-END:variables
}
